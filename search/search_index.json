{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#what-is-fxquinox","title":"What is fxquinox","text":"<p>USD centric pipeline for feature animation and VFX projects.</p> <p>Note</p> <p>This documentation is updated regularly to reflect the most recent changes. If you spot any issue or have a feature request, don't hesitate to send me an email.</p>"},{"location":"fxcore/","title":"fxcore","text":"<p>The fxcore module provides a set of tools for managing and automating the creation of VFX entities.</p>"},{"location":"fxcore/#fxquinox.fxcore.check_asset","title":"check_asset","text":"<pre><code>check_asset(base_dir: str = '.') -&gt; bool\n</code></pre> <p>Checks if a valid asset directory structure exists within a project.</p> <p>Parameters:</p> Name Type Description Default <code>base_dir</code> <code>str</code> <p>The base directory where the asset should be located, typically the \"project/production/assets\" directory. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p><code>True</code> if the asset is valid, <code>False</code> otherwise.</p>"},{"location":"fxcore/#fxquinox.fxcore.check_project","title":"check_project","text":"<pre><code>check_project(base_dir: str = '.') -&gt; bool\n</code></pre> <p>Checks if a valid project directory structure exists.</p> <p>Parameters:</p> Name Type Description Default <code>base_dir</code> <code>str</code> <p>The base directory where the project should be located. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p><code>True</code> if the project is valid, <code>False</code> otherwise.</p>"},{"location":"fxcore/#fxquinox.fxcore.check_sequence","title":"check_sequence","text":"<pre><code>check_sequence(base_dir: str = '.') -&gt; bool\n</code></pre> <p>Checks if a valid sequence directory structure exists within a project.</p> <p>Parameters:</p> Name Type Description Default <code>base_dir</code> <code>str</code> <p>The base directory where the sequence should be located, typically the \"project/production/shots\" directory. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p><code>True</code> if the sequence is valid, <code>False</code> otherwise.</p>"},{"location":"fxcore/#fxquinox.fxcore.check_shot","title":"check_shot","text":"<pre><code>check_shot(base_dir: str = '.') -&gt; bool\n</code></pre> <p>Checks if a valid shot directory structure exists within a sequence.</p> <p>Parameters:</p> Name Type Description Default <code>base_dir</code> <code>str</code> <p>The base directory where the shot should be located, typically the \"project/production/shots/sequence\" directory. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p><code>True</code> if the shot is valid, <code>False</code> otherwise.</p>"},{"location":"fxcore/#fxquinox.fxcore.check_step","title":"check_step","text":"<pre><code>check_step(base_dir: str = '.') -&gt; bool\n</code></pre> <p>Checks if a valid step directory structure exists within a project.</p> <p>Parameters:</p> Name Type Description Default <code>base_dir</code> <code>str</code> <p>The base directory where the step should be located, typically the \"project/production/steps\" directory. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p><code>True</code> if the step is valid, <code>False</code> otherwise.</p>"},{"location":"fxcore/#fxquinox.fxcore.check_task","title":"check_task","text":"<pre><code>check_task(base_dir: str = '.') -&gt; bool\n</code></pre> <p>Checks if a valid task directory structure exists within a project.</p> <p>Parameters:</p> Name Type Description Default <code>base_dir</code> <code>str</code> <p>The base directory where the task should be located, typically the \"project/production/tasks\" directory. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p><code>True</code> if the task is valid, <code>False</code> otherwise.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_asset","title":"create_asset","text":"<pre><code>create_asset(\n    asset_name: str, base_dir: str = \".\", parent: QWidget = None\n) -&gt; Optional[str]\n</code></pre> <p>Creates a new asset directory structure within a project.</p> <p>Parameters:</p> Name Type Description Default <code>asset_name</code> <code>str</code> <p>The name of the asset to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the asset will be created, typically the \"project/production/assets\" directory. Defaults to the current directory.</p> <code>'.'</code> <code>parent</code> <code>QWidget</code> <p>The parent widget for the message box. Only applicable in a GUI environment.</p> <code>None</code> <p>Returns:</p> Type Description <code>Optional[str]</code> <p>Optional[str]: The name of the asset if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_asset(\"charA\", \"/path/to/assets\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; fxquinox.cli.fxcore.create_asset charA --base_dir \"/path/to/assets\"\n</code></pre> Info <p>Has a CLI counterpart.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_assets","title":"create_assets","text":"<pre><code>create_assets(\n    asset_names: list[str], base_dir: str = \".\"\n) -&gt; Optional[list[str]]\n</code></pre> <p>Creates new asset directory structures within a project.</p> <p>Parameters:</p> Name Type Description Default <code>asset_names</code> <code>list</code> <p>The names of the assets to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the asset will be created, typically the \"project/production/assets\" directory. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Type Description <code>Optional[list[str]]</code> <p>Optional[list]: The names of the assets if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_assets([\"charA\", \"propA\"], \"/path/to/assets\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; fxquinox.cli.fxcore.create_assets charA,propA --base_dir \"/path/to/assets\"\n</code></pre> Info <p>Has a CLI counterpart.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_project","title":"create_project","text":"<pre><code>create_project(project_name: str, base_dir: str = '.') -&gt; Optional[str]\n</code></pre> <p>Creates a new project directory structure.</p> <p>Parameters:</p> Name Type Description Default <code>project_name</code> <code>str</code> <p>The name of the project to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the project will be created. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Type Description <code>Optional[str]</code> <p>Optional[str]: The name of the project if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_project(\"my_project\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; python -m fxquinox.cli.fxcore create_project my_project\n</code></pre> Info <p>Has a CLI counterpart.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_sequence","title":"create_sequence","text":"<pre><code>create_sequence(\n    sequence_name: str, base_dir: str = \".\", parent: QWidget = None\n) -&gt; Optional[str]\n</code></pre> <p>Creates a new sequence directory structure within a project.</p> <p>Parameters:</p> Name Type Description Default <code>sequence_name</code> <code>str</code> <p>The name of the sequence to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the sequence will be created, typically the \"project/production/shots\" directory. Defaults to the current directory.</p> <code>'.'</code> <code>parent</code> <code>QWidget</code> <p>The parent widget for the message box. Only applicable in a GUI environment.</p> <code>None</code> <p>Returns:</p> Type Description <code>Optional[str]</code> <p>Optional[str]: The name of the sequence if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_sequence(\"010\", \"/path/to/shots\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; fxquinox.cli.fxcore.create_sequence 010 --base_dir \"/path/to/shots\"\n</code></pre> Info <p>Has a CLI counterpart.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_sequences","title":"create_sequences","text":"<pre><code>create_sequences(\n    sequence_names: list[str], base_dir: str = \".\"\n) -&gt; Optional[list[str]]\n</code></pre> <p>Creates new sequence directory structures within a project.</p> <p>Parameters:</p> Name Type Description Default <code>sequence_names</code> <code>list</code> <p>The names of the sequences to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the sequence will be created, typically the \"project/production/shots\" directory. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Type Description <code>Optional[list[str]]</code> <p>Optional[list]: The names of the sequences if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_sequences([\"010\", \"020\"], \"/path/to/shots\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; fxquinox.cli.fxcore.create_sequences 010,020 --base_dir \"/path/to/shots\"\n</code></pre> Info <p>Has a CLI counterpart.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_shot","title":"create_shot","text":"<pre><code>create_shot(\n    shot_name: str, base_dir: str = \".\", parent: QWidget = None\n) -&gt; Optional[str]\n</code></pre> <p>Creates a new shot directory structure within a sequence.</p> <p>Parameters:</p> Name Type Description Default <code>shot_name</code> <code>str</code> <p>The name of the shot to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the shot will be created, typically the \"project/production/shots/sequence\" directory. Defaults to the current directory.</p> <code>'.'</code> <code>parent</code> <code>QWidget</code> <p>The parent widget for the message box. Only applicable in a GUI environment.</p> <code>None</code> <p>Returns:</p> Type Description <code>Optional[str]</code> <p>Optional[str]: The name of the shot if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_shot(\"0010\", \"/path/to/sequence\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; fxquinox.cli.fxcore.create_shot 0010 --base_dir \"/path/to/sequence\"\n</code></pre> Info <p>Has a CLI counterpart.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_shots","title":"create_shots","text":"<pre><code>create_shots(shot_names: list[str], base_dir: str = '.') -&gt; Optional[list[str]]\n</code></pre> <p>Creates new shot directory structures within a sequence.</p> <p>Parameters:</p> Name Type Description Default <code>shot_names</code> <code>list[str]</code> <p>The names of the shots to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the shots will be created, typically the \"project/production/shots/sequence\" directory. Defaults to the current directory.</p> <code>'.'</code> <p>Returns:</p> Type Description <code>Optional[list[str]]</code> <p>Optional[list[str]]: The names of the shots if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_shots([\"0010\", \"0020\"], \"/path/to/sequence\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; fxquinox.cli.fxcore.create_shots 0010,0020 --base_dir \"/path/to/sequence\"\n</code></pre> Info <p>Has a CLI counterpart.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_step","title":"create_step","text":"<pre><code>create_step(\n    step_name: str, base_dir: str = \".\", parent: QWidget = None\n) -&gt; Optional[str]\n</code></pre> <p>Creates a new step directory structure within a project.</p> <p>Parameters:</p> Name Type Description Default <code>step_name</code> <code>str</code> <p>The name of the step to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the step will be created, typically the \"project/production/steps\" directory. Defaults to the current directory.</p> <code>'.'</code> <code>parent</code> <code>QWidget</code> <p>The parent widget for the message box. Only applicable in a GUI environment.</p> <code>None</code> <p>Returns:</p> Type Description <code>Optional[str]</code> <p>Optional[str]: The name of the step if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_step(\"modeling\", \"/path/to/steps\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; fxquinox.cli.fxcore.create_step modeling --base_dir \"/path/to/steps\"\n</code></pre> Info <p>Has a CLI counterpart.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_task","title":"create_task","text":"<pre><code>create_task(\n    task_name: str, base_dir: str = \".\", parent: QWidget = None\n) -&gt; Optional[str]\n</code></pre> <p>Creates a new task directory structure within a project.</p> <p>Parameters:</p> Name Type Description Default <code>task_name</code> <code>str</code> <p>The name of the task to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the task will be created, typically the \"project/production/tasks\" directory. Defaults to the current directory.</p> <code>'.'</code> <code>parent</code> <code>QWidget</code> <p>The parent widget for the message box. Only applicable in a GUI environment.</p> <code>None</code> <p>Returns:</p> Type Description <code>Optional[str]</code> <p>Optional[str]: The name of the task if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_task(\"rigging\", \"/path/to/tasks\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; fxquinox.cli.fxcore.create_task rigging --base_dir \"/path/to/tasks\"\n</code></pre> Info <p>Has a CLI counterpart.</p>"},{"location":"fxcore/#fxquinox.fxcore.create_workfile","title":"create_workfile","text":"<pre><code>create_workfile(\n    workfile_name: str, base_dir: str = \".\", parent: QWidget = None\n) -&gt; Optional[str]\n</code></pre> <p>Creates a new workfile directory structure within a project.</p> <p>Parameters:</p> Name Type Description Default <code>workfile_name</code> <code>str</code> <p>The name of the workfile to create.</p> required <code>base_dir</code> <code>str</code> <p>The base directory where the workfile will be created, typically the \"project/production/workfiles\" directory. Defaults to the current directory.</p> <code>'.'</code> <code>parent</code> <code>QWidget</code> <p>The parent widget for the message box. Only applicable in a GUI environment.</p> <code>None</code> <p>Returns:</p> Type Description <code>Optional[str]</code> <p>Optional[str]: The name of the workfile if created, <code>None</code> otherwise.</p> <p>Examples:</p> <p>Python</p> <pre><code>&gt;&gt;&gt; create_workfile(\"rigging_v001\", \"/path/to/workfiles\")\n</code></pre> <p>CLI</p> <pre><code>&gt;&gt;&gt; fxquinox.cli.fxcore.create_workfile rigging_v001 --base_dir \"/path/to/workfiles\"\n</code></pre> Info <p>Has a CLI counterpart.</p> Bug <p>Not implemented yet.</p>"},{"location":"fxcore/#fxquinox.fxcore.get_project","title":"get_project","text":"<pre><code>get_project() -&gt; Dict[str, Optional[str]]\n</code></pre> <p>Gets the project path, name, assets path, and shots path from the environment file, or the environment variables (if set beforehand).</p> <p>Returns:</p> Type Description <code>Dict[str, Optional[str]]</code> <p>Dict[str, Optional[str]]: A dictionary with keys 'FXQUINOX_PROJECT_ROOT', 'FXQUINOX_PROJECT_NAME', 'FXQUINOX_PROJECT_ASSETS', and 'FXQUINOX_PROJECT_SHOTS' pointing to their respective paths if found, <code>None</code> otherwise.</p>"},{"location":"fxcore/#fxquinox.fxcore.open_project_directory","title":"open_project_directory","text":"<pre><code>open_project_directory() -&gt; None\n</code></pre> <p>Opens the project directory in the system file manager.</p>"},{"location":"fxcore/#fxquinox.fxcore.run_create_project","title":"run_create_project","text":"<pre><code>run_create_project()\n</code></pre> <p>Runs the create project UI.</p>"},{"location":"fxcore/#fxquinox.fxcore.run_launcher","title":"run_launcher","text":"<pre><code>run_launcher(\n    parent: QWidget = None,\n    quit_on_last_window_closed: bool = True,\n    show_splashscreen: bool = False,\n) -&gt; None\n</code></pre> <p>Runs the launcher UI.</p> <p>Parameters:</p> Name Type Description Default <code>quit_on_last_window_closed</code> <code>bool</code> <p>Whether to quit the application when the last window is closed. Defaults to <code>True</code>.</p> <code>True</code> <code>show_splashscreen</code> <code>bool</code> <p>Whether to show the splash screen. Defaults to <code>False</code>.</p> <code>False</code>"},{"location":"fxcore/#fxquinox.fxcore.run_project_browser","title":"run_project_browser","text":"<pre><code>run_project_browser(\n    parent: QWidget = None,\n    quit_on_last_window_closed: bool = False,\n    dcc: DCC = fxentities.DCC.standalone,\n) -&gt; QMainWindow\n</code></pre> <p>Runs the project browser UI.</p> <p>Parameters:</p> Name Type Description Default <code>parent</code> <code>QWidget</code> <p>The parent widget. Defaults to <code>None</code>.</p> <code>None</code> <code>quit_on_last_window_closed</code> <code>bool</code> <p>Whether to quit the application when the last window is closed. Defaults to <code>False</code>.</p> <code>False</code> <code>dcc</code> <code>DCC</code> <p>The DCC to use. Defaults to <code>None</code>.</p> <code>standalone</code> <p>Returns:</p> Name Type Description <code>QMainWindow</code> <code>QMainWindow</code> <p>The project browser window.</p>"},{"location":"fxcore/#fxquinox.fxcore.set_project","title":"set_project","text":"<pre><code>set_project(\n    launcher: Optional[FXLauncherSystemTray] = None,\n    quit_on_last_window_closed: bool = False,\n    project_path: str = None,\n) -&gt; Optional[Tuple[str, str]]\n</code></pre> <p>Sets the project path in the project browser.</p> <p>Parameters:</p> Name Type Description Default <code>launcher</code> <code>FXLauncherSystemTray</code> <p>The launcher instance to update the project name. Defaults to <code>None</code>.</p> <code>None</code> <code>quit_on_last_window_closed</code> <code>bool</code> <p>Whether to quit the application when the last window is closed. Defaults to <code>False</code>.</p> <code>False</code> <code>project_dir</code> <code>str</code> <p>The project directory to set. Defaults to <code>None</code>.</p> required <p>Returns:</p> Type Description <code>Optional[Tuple[str, str]]</code> <p>Optional[Tuple[str, str]]: A tuple with project path and project name if set, <code>None</code> otherwise.</p>"},{"location":"fxlauncher/","title":"fxlauncher","text":""},{"location":"fxlauncher/#fxquinox.tools.fxlauncher.FXExecutableRunnerThread","title":"FXExecutableRunnerThread","text":"<p>             Bases: <code>QThread</code></p> <p>A QThread subclass to run an executable in a separate thread.</p>"},{"location":"fxlauncher/#fxquinox.tools.fxlauncher.FXLauncherSystemTray","title":"FXLauncherSystemTray","text":"<p>             Bases: <code>FXSystemTray</code></p> <p>The Fxquinox main launcher UI class.</p> <p>Parameters:</p> Name Type Description Default <code>parent</code> <code>QWidget</code> <p>The parent widget.</p> <code>None</code> <code>icon</code> <code>QIcon</code> <p>The icon to display in the system tray.</p> <code>None</code> <code>project</code> <code>str</code> <p>The current project name.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>project</code> <code>str</code> <p>The current project name.</p> <code>colors</code> <code>dict</code> <p>The color dictionary.</p> <code>runner_threads</code> <code>list</code> <p>A list of runner threads.</p> Signals <p>project_changed (str, str): The signal emitted when the project is     changed.</p> Note <p>This class inherits from <code>FXSystemTray</code> which is a custom system tray class that inherits from <code>QSystemTrayIcon</code>.</p>"},{"location":"fxlauncher/#fxquinox.tools.fxlauncher.FXLauncherSystemTray.__create_actions","title":"__create_actions","text":"<pre><code>__create_actions() -&gt; None\n</code></pre> <p>Creates the actions for the system tray.</p>"},{"location":"fxlauncher/#fxquinox.tools.fxlauncher.FXLauncherSystemTray.__handle_connections","title":"__handle_connections","text":"<pre><code>__handle_connections() -&gt; None\n</code></pre> <p>Connects the signals to the slots.</p>"},{"location":"fxlauncher/#fxquinox.tools.fxlauncher.FXLauncherSystemTray.closeEvent","title":"closeEvent","text":"<pre><code>closeEvent(_) -&gt; None\n</code></pre> <p>Overrides the close event to handle the system tray close event.</p>"},{"location":"fxprojectbrowser/","title":"fxprojectprowser","text":""},{"location":"fxprojectbrowser/#fxquinox.tools.fxprojectbrowser.FXCreateShotDialog","title":"FXCreateShotDialog","text":"<p>             Bases: <code>QDialog</code></p>"},{"location":"fxprojectbrowser/#fxquinox.tools.fxprojectbrowser.FXCreateShotDialog.closeEvent","title":"closeEvent","text":"<pre><code>closeEvent(_) -&gt; None\n</code></pre> <p>Overrides the close event.</p>"},{"location":"fxprojectbrowser/#fxquinox.tools.fxprojectbrowser.FXCreateStepDialog","title":"FXCreateStepDialog","text":"<p>             Bases: <code>QDialog</code></p>"},{"location":"fxprojectbrowser/#fxquinox.tools.fxprojectbrowser.FXCreateTaskDialog","title":"FXCreateTaskDialog","text":"<p>             Bases: <code>QDialog</code></p>"},{"location":"fxprojectbrowser/#fxquinox.tools.fxprojectbrowser.FXProjectBrowserWindow","title":"FXProjectBrowserWindow","text":"<p>             Bases: <code>FXMainWindow</code></p> <p>The The Fxquinox project browser class. Provides a window for browsing the project assets, shots, steps, tasks, and workfiles.</p> <p>Parameters:</p> Name Type Description Default <code>parent</code> <code>Optional[QWidget]</code> <p>The parent widget. Defaults to <code>None</code>.</p> <code>None</code> <code>icon</code> <code>Optional[str]</code> <p>The icon name. Defaults to <code>None</code>.</p> <code>None</code> <code>title</code> <code>Optional[str]</code> <p>The window title. Defaults to <code>None</code>.</p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>The window size. Defaults to <code>None</code>.</p> <code>None</code> <code>documentation</code> <code>Optional[str]</code> <p>The documentation URL. Defaults to <code>None</code>.</p> <code>None</code> <code>project</code> <code>Optional[str]</code> <p>The project name. Defaults to <code>None</code>.</p> <code>None</code> <code>version</code> <code>Optional[str]</code> <p>The version number. Defaults to <code>None</code>.</p> <code>None</code> <code>company</code> <code>Optional[str]</code> <p>The company name. Defaults to <code>None</code>.</p> <code>None</code> <code>color_a</code> <code>Optional[str]</code> <p>The color A for the window. Defaults to <code>None</code>.</p> <code>None</code> <code>color_b</code> <code>Optional[str]</code> <p>The color B for the window. Defaults to <code>None</code>.</p> <code>None</code> <code>ui_file</code> <code>Optional[str]</code> <p>The UI file to load. Defaults to <code>None</code>.</p> <code>None</code> <code>dcc</code> <code>DCC</code> <p>The DCC to use. Defaults to <code>fxentities.DCC.standalone</code>.</p> <code>standalone</code> <p>Attributes:</p> Name Type Description <code>dcc</code> <code>DCC</code> <p>The DCC to use.</p> <code>project_info</code> <code>dict</code> <p>The project information.</p> <code>asset</code> <code>Optional[str]</code> <p>The current asset.</p> <code>sequence</code> <code>str</code> <p>The current sequence.</p> <code>shot</code> <code>str</code> <p>The current shot.</p> <code>step</code> <code>str</code> <p>The current step.</p> <code>task</code> <code>str</code> <p>The current task.</p> <code>workfile</code> <code>str</code> <p>The current workfile.</p>"},{"location":"fxprojectbrowser/#fxquinox.tools.fxprojectbrowser.FXProjectBrowserWindow.create_shot","title":"create_shot","text":"<pre><code>create_shot()\n</code></pre> <p>Open a <code>FXCreateShotDialog</code> instance to create a new shot in the project.</p>"},{"location":"fxprojectbrowser/#fxquinox.tools.fxprojectbrowser.FXProjectBrowserWindow.create_step","title":"create_step","text":"<pre><code>create_step()\n</code></pre> <p>Open a <code>FXCreateStepDialog</code> instance to create a new step in the shot.</p>"},{"location":"fxprojectbrowser/#fxquinox.tools.fxprojectbrowser.FXProjectBrowserWindow.create_task","title":"create_task","text":"<pre><code>create_task()\n</code></pre> <p>Open a <code>FXCreateTaskDialog</code> instance to create a new task in the step.</p>"},{"location":"fxprojectbrowser/#fxquinox.tools.fxprojectbrowser.FXProjectBrowserWindow.create_workfile_from_preset","title":"create_workfile_from_preset","text":"<pre><code>create_workfile_from_preset(preset_file: Optional[str] = None)\n</code></pre> <p>Creates a workfile from the selected preset file, inside the current <code>task/workfiles</code> directory.</p> <p>Parameters:</p> Name Type Description Default <code>preset_file</code> <code>str</code> <p>The file to create the workfile from. Defaults to <code>None</code>.</p> <code>None</code>"}]}